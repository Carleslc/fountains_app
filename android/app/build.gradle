plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Read local.properties environment variables
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// Safe approach working for both local and IDX development
def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
try {
    if (flutterVersionCode == null) {
        flutterVersionCode = flutter.versionCode
    }
} catch (Exception e) { /* MissingPropertyException */
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
try {
    if (flutterVersionName == null) {
        flutterVersionName = flutter.versionName
    }
} catch (Exception e) { /* MissingPropertyException */
    flutterVersionName = "1.0.0+1"
}

android {
    namespace = "me.carleslc.fountains"
    compileSdk = flutter.compileSdkVersion // 35
    ndkVersion = flutter.ndkVersion // 26.1.10909125 // Alt: 27.2.12479018

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    androidResources {
        generateLocaleConfig true
    }

    defaultConfig {
        // Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "me.carleslc.fountains"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        // <flutter.sdk>/flutter/packages/flutter_tools/gradle/src/main/groovy/flutter.groovy
        minSdk = 23 // flutter.minSdkVersion // 21
        targetSdk = flutter.targetSdkVersion // 35
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

// Log deprecation warnings for this project
def showDeprecationWarnings = true
def deprecationWarnings = showDeprecationWarnings ? "-Xlint:deprecation" : "-Xlint:-deprecation"

tasks.withType(JavaCompile) {
    options.compilerArgs += [deprecationWarnings]
}
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [deprecationWarnings]
    }
}

flutter {
    source = "../.."
}
